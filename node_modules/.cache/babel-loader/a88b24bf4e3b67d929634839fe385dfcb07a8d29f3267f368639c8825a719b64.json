{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\debad\\\\Documents\\\\shop-app\\\\myntra-clone-new\\\\src\\\\Components\\\\Section.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Section.css';\nimport { gender, Categories } from \"../config/productConfig\";\nimport { CartState } from '../Context';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Section() {\n  _s();\n  const [selectedGender, setSelectedGender] = useState('');\n  const [selectedcategories, setSelectedCategories] = useState([]);\n  // const [filterProducts, setFilterProducts] = useState('')\n  const getValues = filterValue => selectedGender === filterValue;\n  const getCheckedValues = val => {\n    const s = selectedcategories === null || selectedcategories === void 0 ? void 0 : selectedcategories.some(e => {\n      return e.value === val;\n    });\n    return s;\n  };\n  const handleRadioBtn = e => {\n    setSelectedGender(e.target.value);\n  };\n  const handleCheckedItems = item => {\n    const isChecked = getValues(item.value);\n    if (!isChecked) {\n      setSelectedCategories([...selectedcategories, {\n        label: item.label,\n        value: item.value\n      }]);\n    } else {\n      setSelectedCategories(selectedcategories.filter(category => category.value !== selectedcategories.value));\n    }\n  };\n  console.log(\"ggg-> \", selectedcategories);\n  const {\n    setSearchData,\n    products,\n    searchData\n  } = CartState();\n  useEffect(() => {\n    console.log(\"useeffect called\");\n    setSearchData(products.filter(product => product.gender === selectedGender));\n  }, [selectedGender]);\n  console.log(\"products in section---> \", searchData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gender bold\",\n          children: \"Gender:-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), gender.map(gen => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radio\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"gender\",\n            value: gen.value,\n            checked: getValues(gen.value),\n            onChange: e => handleRadioBtn(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 60\n          }, this), gen.label]\n        }, gen.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"categories bold\",\n          children: \"Categories:-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), Categories.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: cat.value,\n            checked: getCheckedValues(cat.value),\n            onChange: cat => handleCheckedItems(cat)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 60\n          }, this), cat.label]\n        }, cat.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Section, \"kxddBA/Ry0cI5WFngkkuRIqyoQs=\");\n_c = Section;\nvar _c;\n$RefreshReg$(_c, \"Section\");","map":{"version":3,"names":["React","useEffect","useState","gender","Categories","CartState","Section","selectedGender","setSelectedGender","selectedcategories","setSelectedCategories","getValues","filterValue","getCheckedValues","val","s","some","e","value","handleRadioBtn","target","handleCheckedItems","item","isChecked","label","filter","category","console","log","setSearchData","products","searchData","product","map","gen","cat"],"sources":["C:/Users/debad/Documents/shop-app/myntra-clone-new/src/Components/Section.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './Section.css'\r\nimport { gender, Categories } from \"../config/productConfig\"\r\nimport { CartState } from '../Context'\r\n\r\nexport default function Section() {\r\n    const [selectedGender, setSelectedGender] = useState('')\r\n    const [selectedcategories, setSelectedCategories] = useState([])\r\n    // const [filterProducts, setFilterProducts] = useState('')\r\n    const getValues = (filterValue) =>  selectedGender === filterValue\r\n    const getCheckedValues = (val) => {\r\n        const s = selectedcategories?.some((e) => {\r\n            return e.value === val\r\n        })\r\n        return s\r\n    }\r\n    const handleRadioBtn = (e) => {\r\n        setSelectedGender(e.target.value)   \r\n    }\r\n    const handleCheckedItems = (item) => {\r\n        const isChecked = getValues(item.value)\r\n        if(!isChecked){\r\n            setSelectedCategories([...selectedcategories, {\r\n                label: item.label,\r\n                value: item.value\r\n            }\r\n            ])\r\n        } else {\r\n            setSelectedCategories(selectedcategories.filter((category) => category.value !== selectedcategories.value))\r\n        }\r\n    }\r\n    console.log(\"ggg-> \", selectedcategories)\r\n    const { setSearchData, products, searchData } = CartState()\r\n    useEffect(() => {\r\n        console.log(\"useeffect called\")\r\n        setSearchData(products.filter((product) => product.gender === selectedGender))\r\n    }, [selectedGender])\r\n    console.log(\"products in section---> \", searchData)\r\n    return(\r\n        <>\r\n        <section className='container1'>\r\n            \r\n            <div >\r\n                <div className='gender bold'>Gender:-</div>\r\n                { gender.map((gen) => (\r\n                    <div key={gen.value} className='radio'><input type=\"radio\" name='gender' value={gen.value} checked={getValues(gen.value)} onChange={(e) => handleRadioBtn(e)}/>{gen.label}</div>\r\n                ))}\r\n            </div>\r\n            <br />\r\n            <div>\r\n                <div className='categories bold'>Categories:-</div>\r\n                { Categories.map((cat) => (\r\n                    <div key={cat.value} className='check'><input type=\"checkbox\" value={cat.value} checked={getCheckedValues(cat.value)} onChange={(cat) => handleCheckedItems(cat)} />{cat.label}</div>\r\n                ))}\r\n            </div>\r\n        </section>\r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}